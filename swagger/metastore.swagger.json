{
  "swagger": "2.0",
  "info": {
    "title": "metastore.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/database/{catalog}": {
      "get": {
        "summary": "Get database information",
        "operationId": "GetDatabase",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/metastoreGetDatabaseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "catalog",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Metastore"
        ]
      }
    },
    "/v2/dblist/{catalog}": {
      "get": {
        "summary": "Get collection of databases",
        "operationId": "ListDatabases",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/metastoreDatabase"
            }
          }
        },
        "parameters": [
          {
            "name": "catalog",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_pattern",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude_params",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Metastore"
        ]
      }
    },
    "/v2/table/{catalog}/{db_id.name}/{id.name}": {
      "get": {
        "summary": "Get table information",
        "operationId": "GetTable",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/metastoreGetTableResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "catalog",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "db_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "db_id.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Metastore"
        ]
      }
    }
  },
  "definitions": {
    "RequestStatusStatus": {
      "type": "string",
      "enum": [
        "OK",
        "ERROR",
        "NOTFOUND",
        "CONFLICT",
        "BUSY",
        "INTERNAL"
      ],
      "default": "OK"
    },
    "metastoreDatabase": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/metastoreId"
        },
        "seq_id": {
          "type": "string",
          "format": "uint64"
        },
        "location": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "system_parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Database is a container for tables.\n\nDatabase object has two sets of parameters:\n - User parameters are intended for user and are just transparently passed around\n - System parameters are intended to be used by Hive for its internal purposes\nseq_id is a numeric ID which is unique within a catalog. It can be used to track\nnew databases in the catalog\nOriginal Metastore Database object also had owner information.\nThese can be represented using system parameters if needed since the current\nmetastore service does not interpret Owner info."
    },
    "metastoreFieldSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      },
      "description": "FieldSchema defines name and type for each column."
    },
    "metastoreGetDatabaseResponse": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/metastoreDatabase"
        },
        "status": {
          "$ref": "#/definitions/metastoreRequestStatus"
        }
      }
    },
    "metastoreGetTableResponse": {
      "type": "object",
      "properties": {
        "table": {
          "$ref": "#/definitions/metastoreTable"
        },
        "status": {
          "$ref": "#/definitions/metastoreRequestStatus"
        }
      }
    },
    "metastoreId": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "description": "Objects have unique name and unique ID.\n\nBoth name and ID are just sequence of bytes - there are no\nassumptions about encoding or length."
    },
    "metastoreInputFormat": {
      "type": "string",
      "enum": [
        "IF_CUSTOM",
        "IF_SEQUENCE",
        "IF_TEXT",
        "IF_HIVE"
      ],
      "default": "IF_CUSTOM",
      "description": "Known Input Formats. CUSTOM means that it should be specified as a string."
    },
    "metastoreOrder": {
      "type": "object",
      "properties": {
        "col": {
          "type": "string"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "sort order of a column (column name along with asc/desc)"
    },
    "metastoreOutputFormat": {
      "type": "string",
      "enum": [
        "OF_CUSTOM",
        "OF_SEQUENCE",
        "OF_IGNORE_KEY",
        "OF_HIVE"
      ],
      "default": "OF_CUSTOM",
      "description": "Known Output Formats. CUSTOM means that it should be specified as a string."
    },
    "metastoreRequestStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/RequestStatusStatus"
        },
        "error": {
          "type": "string"
        },
        "cookie": {
          "type": "string"
        }
      },
      "title": "General status for results"
    },
    "metastoreSerDeInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/metastoreSerdeType"
        },
        "name": {
          "type": "string"
        },
        "serializationLib": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "NOTE: Should we enum this as well?"
        }
      },
      "title": "Serialization/Deserialization information"
    },
    "metastoreSerdeType": {
      "type": "string",
      "enum": [
        "SERDE_CUSTOM",
        "SERDE_LAZY_SIMPLE",
        "SERDE_AVRO",
        "SERDE_JSON",
        "SERDE_ORC",
        "SERDE_REGEX",
        "SERDE_THRIFT",
        "SERDE_PARQUET",
        "SERDE_CSV"
      ],
      "default": "SERDE_CUSTOM",
      "description": "Known SerDes are represented using enum. Unknown ones are represented using strings."
    },
    "metastoreStorageDescriptor": {
      "type": "object",
      "properties": {
        "cols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metastoreFieldSchema"
          }
        },
        "location": {
          "type": "string"
        },
        "inputFormat": {
          "$ref": "#/definitions/metastoreInputFormat"
        },
        "inputFormatName": {
          "type": "string"
        },
        "outputFormat": {
          "$ref": "#/definitions/metastoreOutputFormat"
        },
        "outputFormatName": {
          "type": "string"
        },
        "numBuckets": {
          "type": "integer",
          "format": "int32"
        },
        "serdeInfo": {
          "$ref": "#/definitions/metastoreSerDeInfo"
        },
        "bucketCols": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sortCols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metastoreOrder"
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "system_parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "StorageDescriptor holds all the information about physical storage of the data belonging to a table"
    },
    "metastoreTable": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/metastoreId"
        },
        "seq_id": {
          "type": "string",
          "format": "uint64"
        },
        "sd": {
          "$ref": "#/definitions/metastoreStorageDescriptor"
        },
        "partitionKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/metastoreFieldSchema"
          }
        },
        "tableType": {
          "$ref": "#/definitions/metastoreTableType"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "system_parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Table information"
    },
    "metastoreTableType": {
      "type": "string",
      "enum": [
        "TTYPE_MANAGED",
        "TTYPE_EXTERNAL",
        "TTYPE_INDEX"
      ],
      "default": "TTYPE_MANAGED"
    }
  }
}
